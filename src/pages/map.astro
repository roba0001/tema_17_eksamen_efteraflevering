---
import Skelet from "../layouts/Skelet.astro";
import "../style/styles.css";
import MapRowHuset from "../components/MapRow_Huset.astro";
import MapRowBLOX from "../components/MapRow_BLOX.astro";
import MapRowDiamond from "../components/MapRow_Diamond.astro";
import Gradient from "../components/Gradient.astro";
---

<Skelet title="Map">
  <div class="map_desktop_grid">
    <div class="map_container">
      <img src="/imgs/map/mobile_map.webp" alt="Google streetmap over the venue areas" />
      <!--  lokationspins  -->
      <button data-cursor="fill" class="map_pin" data-venue="huset">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="15"
          height="20"
          viewBox="0 0 15 20"
          fill="none"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M10.8921 17.2982C10.0034 18.2959 8.96838 19.1895 7.80618 19.9121C7.66309 20.0196 7.46913 20.0326 7.31014 19.9284C5.59309 18.8103 4.15107 17.4675 3.0175 16.0075C1.45306 13.9991 0.468936 11.7726 0.131884 9.62739C-0.211528 7.45293 0.109626 5.35985 1.16689 3.65902C1.58343 2.98682 2.11604 2.37485 2.76471 1.84588C4.256 0.630072 5.95876 -0.0128268 7.65674 0.000193938C9.29112 0.0132147 10.9048 0.636582 12.2992 1.94028C12.7888 2.39601 13.2006 2.91846 13.5377 3.48487C14.6744 5.40217 14.9193 7.84681 14.42 10.324C13.9272 12.7719 12.703 15.2589 10.8921 17.2933V17.2982ZM7.3324 3.86735C9.34836 3.86735 10.9812 5.54051 10.9812 7.60267C10.9812 9.66645 9.34677 11.338 7.3324 11.338C5.31645 11.338 3.68365 9.66645 3.68365 7.60267C3.68206 5.53888 5.31645 3.86735 7.3324 3.86735Z"
            fill="#060604"></path>
        </svg>
        <p>Huset</p>
      </button>
      <button data-cursor="fill" class="map_pin" data-venue="blox">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="15"
          height="20"
          viewBox="0 0 15 20"
          fill="none"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M10.8921 17.2982C10.0034 18.2959 8.96838 19.1895 7.80618 19.9121C7.66309 20.0196 7.46913 20.0326 7.31014 19.9284C5.59309 18.8103 4.15107 17.4675 3.0175 16.0075C1.45306 13.9991 0.468936 11.7726 0.131884 9.62739C-0.211528 7.45293 0.109626 5.35985 1.16689 3.65902C1.58343 2.98682 2.11604 2.37485 2.76471 1.84588C4.256 0.630072 5.95876 -0.0128268 7.65674 0.000193938C9.29112 0.0132147 10.9048 0.636582 12.2992 1.94028C12.7888 2.39601 13.2006 2.91846 13.5377 3.48487C14.6744 5.40217 14.9193 7.84681 14.42 10.324C13.9272 12.7719 12.703 15.2589 10.8921 17.2933V17.2982ZM7.3324 3.86735C9.34836 3.86735 10.9812 5.54051 10.9812 7.60267C10.9812 9.66645 9.34677 11.338 7.3324 11.338C5.31645 11.338 3.68365 9.66645 3.68365 7.60267C3.68206 5.53888 5.31645 3.86735 7.3324 3.86735Z"
            fill="#060604"></path>
        </svg>
        <p>BLOX</p>
      </button>
      <button data-cursor="fill" class="map_pin" data-venue="black_diamond">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="15"
          height="20"
          viewBox="0 0 15 20"
          fill="none"
        >
          <path
            fill-rule="evenodd"
            clip-rule="evenodd"
            d="M10.8921 17.2982C10.0034 18.2959 8.96838 19.1895 7.80618 19.9121C7.66309 20.0196 7.46913 20.0326 7.31014 19.9284C5.59309 18.8103 4.15107 17.4675 3.0175 16.0075C1.45306 13.9991 0.468936 11.7726 0.131884 9.62739C-0.211528 7.45293 0.109626 5.35985 1.16689 3.65902C1.58343 2.98682 2.11604 2.37485 2.76471 1.84588C4.256 0.630072 5.95876 -0.0128268 7.65674 0.000193938C9.29112 0.0132147 10.9048 0.636582 12.2992 1.94028C12.7888 2.39601 13.2006 2.91846 13.5377 3.48487C14.6744 5.40217 14.9193 7.84681 14.42 10.324C13.9272 12.7719 12.703 15.2589 10.8921 17.2933V17.2982ZM7.3324 3.86735C9.34836 3.86735 10.9812 5.54051 10.9812 7.60267C10.9812 9.66645 9.34677 11.338 7.3324 11.338C5.31645 11.338 3.68365 9.66645 3.68365 7.60267C3.68206 5.53888 5.31645 3.86735 7.3324 3.86735Z"
            fill="#060604"></path>
        </svg>
        <p>The Black Diamond</p>
      </button>
    </div>
    <div class="text_container">
      <h1>Festival Maps</h1>
      <p>
        Our three festival venues are centrally located in Copenhagen and within walking distance of
        each other. They're easily accessible by train, bus, or metro. For directions and venue
        maps, use the sidebar or select a location on the map below.
      </p>
    </div>
    <Gradient gradient_class="map" />

    <div class="map_accordion_wrapper">
      <MapRowHuset />
      <MapRowBLOX />
      <MapRowDiamond />
    </div>
  </div>
</Skelet>

<style>
  /* ------------------MOBILE------------------ */

  .map_container {
    width: 100%;
    margin-top: 60px;
    position: relative;
    overflow: hidden;
  }

  .map_container img {
    width: 100%;
    height: auto;
  }

  .map_container button {
    position: absolute;
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
  }

  .map_container button[data-venue="huset"] {
    top: 26%;
    left: 12.5%;
  }

  .map_container button[data-venue="blox"] {
    top: 81%;
    left: 40%;
  }

  .map_container button[data-venue="black_diamond"] {
    top: 66%;
    left: 62%;
  }

  .text_container {
    margin: 40px 20px;
  }

  .text_container h1 {
    margin-bottom: 1.62rem;
  }

  .map_pin.active {
    background: var(--green) !important;
  }

  .map_pin.active p {
    color: var(--black) !important;
  }

  .map_pin.active svg path {
    fill: var(--black);
    stroke: black;
  }

  .map_container button {
    display: flex;
    height: 1.5rem;
    padding: 1rem 0.625rem;
    justify-content: flex-end;
    align-items: center;
    gap: 0.25rem;
    align-self: stretch;
    border-radius: 3.75rem;
    width: fit-content;
    background-color: var(--black);
  }
  .map_container svg path {
    fill: var(--off_white);
  }

  .map_container button p {
    color: var(--off_white);
  }

  /* ------------------DESKTOP------------------ */

  @media (min-width: 800px) {
    .map_desktop_grid {
      margin-top: 60px;
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 0;
      grid-template-rows: 185px 1fr;
      height: 100vh;
    }

    .text_container {
      grid-row: 1;
      grid-column: 1/-1;
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 1fr;
      margin: 0;
      border-width: 1px;
      border-bottom-style: solid;
    }

    .text_container > * {
      margin: 1rem 40px;
      align-items: flex-end;
    }

    .text_container > *:not(:first-child) {
      border-right: 1px solid black;
    }

    .text_container h1 {
      display: grid;
      grid-column: 2;
      grid-row: 1;
    }

    .text_container p {
      grid-column: 1;
      grid-row: 1;
      display: flex;
      justify-content: space-between;
      gap: 3rem;
      margin: 0;
      padding: 1rem 40px;
    }

    .text_container p::before {
      content: "( Directions )";
      width: auto;
      white-space: nowrap;
      font-family: "GeneralSans", sans-serif;
      font-size: 18px;
      font-weight: 600;
      font-style: normal;
      color: var(--black);
    }

    .map_container {
      margin: 0;
      border-right-style: solid;
      border-width: 1px;
    }

    .map_container img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    .map_container svg {
      width: 15px;
      height: 20px;
    }

    .map_container button[data-venue="huset"] {
      top: 27%;
      left: 13%;
    }

    .map_container button[data-venue="blox"] {
      top: 82%;
      left: 41%;
    }

    .map_container button[data-venue="black_diamond"] {
      top: 69%;
      left: 61%;
    }

    .map_accordion_wrapper {
      margin: 0;
      overflow: hidden;
      overflow-y: scroll;
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const pins = document.querySelectorAll(".map_pin");
    const mapRowWrappers = document.querySelectorAll(".map_row_wrapper");

    pins.forEach((pin) => {
      pin.addEventListener("click", () => {
        const venue = pin.dataset.venue;

        // Toggle accordions
        mapRowWrappers.forEach((wrapper) => {
          const isTarget = wrapper.dataset.venue === venue;
          const closed = wrapper.querySelector(".map_row_closed");
          const open = wrapper.querySelector(".map_row_open");

          if (isTarget) {
            closed.classList.add("hidden");
            open.classList.remove("hidden");
          } else {
            closed.classList.remove("hidden");
            open.classList.add("hidden");
          }
        });

        // Handle active pin styling
        pins.forEach((p) => p.classList.remove("active"));
        pin.classList.add("active");
      });
    });

    mapRowWrappers.forEach((wrapper) => {
      const closed = wrapper.querySelector(".map_row_closed");

      closed.addEventListener("click", () => {
        const venue = wrapper.dataset.venue;

        mapRowWrappers.forEach((w) => {
          const isTarget = w.dataset.venue === venue;
          const wClosed = w.querySelector(".map_row_closed");
          const wOpen = w.querySelector(".map_row_open");

          if (isTarget) {
            wClosed.classList.add("hidden");
            wOpen.classList.remove("hidden");
          } else {
            wClosed.classList.remove("hidden");
            wOpen.classList.add("hidden");
          }
        });

        // matcher active pin til den Ã¥bne accoridions venue
        pins.forEach((pin) => {
          if (pin.dataset.venue === venue) {
            pin.classList.add("active");
          } else {
            pin.classList.remove("active");
          }
        });
      });
    });
  });
</script>
