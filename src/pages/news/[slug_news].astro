---
import Skelet from "../../layouts/Skelet.astro";
import CardCategory from "../../components/Card_Category.astro";
import "../../style/styles.css";
import ProgramCard from "../../components/Program_Card.astro";
import Gradient from "../../components/Gradient.astro";

export async function getStaticPaths() {
  const data = await fetch("https://hdwrzbktzyoytozzhhrw.supabase.co/rest/v1/News", {
    method: "GET",
    headers: {
      apikey:
        "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imhkd3J6Ymt0enlveXRvenpoaHJ3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY4MDIxMzYsImV4cCI6MjA2MjM3ODEzNn0.3w77RtPOv0ngqCNY7WUomweHq-aqoPC2LlEKmQBj1H0",
    },
  }).then((response) => response.json());
  return data.map((news) => {
    return {
      // laver en url for hver side med et unikt slug
      params: { slug_news: news.slug_news },
      //   sender props med ned til undersiden, hvor myData har v√¶rdien af post
      props: { myData: news },
    };
  });
}
// laver en constant med den data der er fra den unikke slug, her samles myData op
const { myData } = Astro.props;
---

<Skelet title={myData.title}>
  <div class="news_singleview_grid">
    <a href="/news" class="back_arrow_section">
      <img data-cursor="fill" src="/imgs/Program/numbers/arrow.svg" alt="arrow" />
    </a>

    <div class="left_img_column">
      <div class="desktop_imgs">
        <img id="changingImageDesktop1" src={`/imgs/news${myData.image_1}`} alt="Article Image" />
        <img
          class="hidden"
          id="changingImageDesktop2"
          src={`/imgs/news${myData.image_2}`}
          alt="Article Image"
        />
        <img
          class="hidden"
          id="changingImageDesktop3"
          src={`/imgs/news${myData.image_3}`}
          alt="Article Image"
        />
      </div>
    </div>

    <div class="right_txt_column">
      <div class="news_date_and_author_flex">
        <p>Date: {myData.date}</p>
        <p>Author: {myData.author}</p>
      </div>
      <div class="news_topics_flex">
        <CardCategory className="newsSW_light" text={myData.type} />

        {
          myData.topic.map((newsTopic) => {
            return <CardCategory className="newsSW" text={newsTopic} />;
          })
        }
      </div>
      <div class="news_txt">
        <h2>{myData.title}</h2>
        {
          myData.text.map((eventText) => {
            return <p>{eventText}</p>;
          })
        }

        <Gradient gradient_class="news_sw" />
        <img id="changingImageMobile" src={`/imgs/news${myData.image_1}`} alt="Article Image" />

        {
          myData.text_2.map((eventText2) => {
            return <p>{eventText2}</p>;
          })
        }

        <p>
          Stay tuned for more updates and behind-the-scenes highlights from this year's Design
          Festival by signing up for our newsletter.
        </p>
        <Gradient gradient_class="news_sw2" />
      </div>
    </div>
  </div>

  <style>
    img {
      width: 20rem;
    }

    .news_singleview_grid {
      display: flex;
      flex-direction: column;
      margin-top: 120px;
    }

    .back_arrow_section {
      padding: 20px;
      border-width: 1px;
      border-bottom-style: solid;
    }

    .back_arrow_section img {
      width: 25px;
      transform: rotate(135deg);
    }

    .news_date_and_author_flex {
      display: flex;
      border-bottom-style: solid;
      border-width: 1px;
    }

    .news_date_and_author_flex p {
      padding: 10px 20px;
    }

    .news_date_and_author_flex > p:first-child {
      border-right-style: solid;
      border-width: 1px;
    }

    .news_topics_flex {
      display: flex;
      padding: 20px;
      padding-bottom: 0;
      gap: 15px;
    }

    .desktop_imgs,
    .news_sw2 {
      display: none;
    }

    #changingImageMobile {
      height: auto;
      width: 20rem;
      margin: 2rem 20px;
      border-radius: 30px;
    }

    .news_txt {
      padding: 1.5rem 20px;
    }

    .news_txt h2 {
      margin-bottom: 1rem;
    }

    .news_txt p {
      margin-bottom: 1.5rem;
    }

    .news_txt p:last-of-type {
      margin-bottom: 0rem;
    }

    .news_event_details {
      margin: 20px;
      margin-top: 0;
    }

    .news_event_details img {
      margin: 1rem 0;
    }

    @media (min-width: 800px) {
      #changingImageMobile {
        display: none;
      }

      .news_sw2,
      .desktop_imgs {
        display: block;
      }

      .back_arrow_section {
        grid-column: 1/-1;
        padding: 20px 40px;
      }

      .back_arrow_section img {
        width: 35px;
        transform: rotate(135deg);
      }

      .news_singleview_grid {
        display: grid;
        grid-template-columns: 1fr 2fr;
        grid-template-rows: auto 1fr;
        height: 90vh;
      }

      .left_img_column {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        border-width: 1px;
        border-right-style: solid;
      }

      .left_img_column img {
        object-fit: cover;
        height: 30rem;
        width: 20rem;
        margin: 2rem 0;
        border-radius: 30px;
      }

      .news_date_and_author_flex p {
        padding: 10px 40px;
      }

      .porgramCard_placehoder {
        width: 15rem;
        height: auto;
        border-radius: 30px;
      }

      .news_topics_flex {
        padding: 20px 40px 0px 40px;
      }

      .news_txt {
        padding: 2.5rem 40px 2.5rem 40px;
      }

      .news_txt h2 {
        margin-bottom: 2rem;
      }

      .news_event_details {
        margin: 0 40px 20px 40px;
      }

      .news_event_details img {
        margin: 1.5rem 0;
      }
    }

    .hidden {
      display: none !important;
    }
    .show {
      display: block !important;
    }
  </style>

  <script>
    window.addEventListener("DOMContentLoaded", () => {
      const img1 = document.getElementById("changingImageDesktop1");
      const img2 = document.getElementById("changingImageDesktop2");
      const img3 = document.getElementById("changingImageDesktop3");

      const images = [img1, img2, img3];
      let currentIndex = 0;

      function showImage(index) {
        images.forEach((img, i) => {
          if (i === index) {
            img.classList.remove("hidden");
            img.classList.add("show");
          } else {
            img.classList.add("hidden");
            img.classList.remove("show");
          }
        });
      }

      showImage(currentIndex);
      setInterval(() => {
        currentIndex = (currentIndex + 1) % images.length;
        showImage(currentIndex);
      }, 2000);
    });
  </script>
</Skelet>
